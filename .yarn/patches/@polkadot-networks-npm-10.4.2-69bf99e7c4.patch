diff --git a/defaults/genesis.js b/defaults/genesis.js
index 5785b64de7d579140f2d0b433acd0ecf67e25594..76475fa3ac9bce2e3ec4e2d0e237db4b37044493 100644
--- a/defaults/genesis.js
+++ b/defaults/genesis.js
@@ -8,7 +8,8 @@
 export const knownGenesis = {
   acala: ['0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'],
   ajuna: ['0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee'],
-  'aleph-node': ['0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e'],
+  'aleph-zero': ['0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e'],
+  'aleph-zero-testnet': ['0x05d5279c52c484cc80396535a316add7d47b1c5b9e0398dd1f584149341460c5'],
   astar: ['0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'],
   basilisk: ['0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'],
   bifrost: ['0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'],
diff --git a/interfaces.d.ts b/interfaces.d.ts
index 20861bd025ee52e9db89433075cc080fc724ddbc..30b3c2f0b4a0c852e08b21ce02e144235bd7bc2e 100644
--- a/interfaces.d.ts
+++ b/interfaces.d.ts
@@ -1,4 +1,6 @@
-import type { Network, SubstrateNetwork } from './types';
+import type { Network, ShowNetworks, SubstrateNetwork } from './types';
 export declare const allNetworks: SubstrateNetwork[];
 export declare const availableNetworks: Network[];
 export declare const selectableNetworks: Network[];
+export declare const testNetworks: Network[];
+export declare const showNetworks: ShowNetworks;
diff --git a/interfaces.js b/interfaces.js
index d0cbd60798978bc52015333ad93d5422cb95f8f5..eb387204ac3b299cd8f8a461cce709eb21267b22 100644
--- a/interfaces.js
+++ b/interfaces.js
@@ -6,7 +6,9 @@ import { knownGenesis, knownIcon, knownLedger, knownTestnet } from "./defaults/i
 
 // These are known prefixes that are not sorted
 const UNSORTED = [0, 2, 42];
-const TESTNETS = ['testnet'];
+const ALEPH_GENESIS_HASH = '0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e'
+const ALEPH_TESTNET_GENESIS_HASH = '0x05d5279c52c484cc80396535a316add7d47b1c5b9e0398dd1f584149341460c5'
+
 function toExpanded(o) {
   const network = o.network || '';
   const nameParts = network.replace(/_/g, '-').split('-');
@@ -21,15 +23,15 @@ function toExpanded(o) {
   n.icon = knownIcon[network] || 'substrate';
 
   // filtering
-  n.isTestnet = !!knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);
-  n.isIgnored = n.isTestnet || !(o.standardAccount && o.decimals && o.decimals.length && o.symbols && o.symbols.length) && o.prefix !== 42;
+  n.isTestnet = !!knownTestnet[network];
+  n.isIgnored = !(o.standardAccount && o.decimals && o.decimals.length && o.symbols && o.symbols.length) && o.prefix !== 42 ;
   return n;
 }
 function filterSelectable({
   genesisHash,
   prefix
 }) {
-  return !!genesisHash.length || prefix === 42;
+  return !!genesisHash.length || genesisHash !== ALEPH_GENESIS_HASH || genesisHash !== ALEPH_TESTNET_GENESIS_HASH || prefix === 42;
 }
 function filterAvailable(n) {
   return !n.isIgnored && !!n.network;
@@ -40,8 +42,34 @@ function sortNetworks(a, b) {
   return isUnSortedA === isUnSortedB ? isUnSortedA ? 0 : a.displayName.localeCompare(b.displayName) : isUnSortedA ? -1 : 1;
 }
 
+
+const alephNetworks = [{
+  "prefix": 42,
+  "network": "aleph-zero",
+  "displayName": "Aleph Zero",
+  "symbols": ["AZERO"],
+  "decimals": [12],
+  "standardAccount": "*25519",
+  "website": "https://alephzero.org/"
+},
+{
+  "prefix": 42,
+  "network": "aleph-zero-testnet",
+  "displayName": "Aleph Zero Testnet",
+  "symbols": ["TZERO"],
+  "decimals": [12],
+  "standardAccount": "*25519",
+  "website": "https://alephzero.org/"
+}]
+
+
+
 // This is all the Substrate networks with our additional information
-export const allNetworks = knownSubstrate.map(toExpanded);
+export const allNetworks = knownSubstrate.concat(alephNetworks).map(toExpanded);
+
+export function showNetworks() {
+console.log('allNetworks', allNetworks)
+};
 
 // The list of available/claimed prefixes
 //   - no testnets
@@ -49,5 +77,8 @@ export const allNetworks = knownSubstrate.map(toExpanded);
 //   - sort by name, however we keep 0, 2, 42 first in the list
 export const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks);
 
+// The list of test networks
+export const testNetworks = allNetworks.filter(network => network.isTestnet).sort(sortNetworks);
+
 // A filtered list of those chains we have details about (genesisHashes)
 export const selectableNetworks = availableNetworks.filter(filterSelectable);
diff --git a/types.d.ts b/types.d.ts
index 0e25723971d2cccda7da89370b25352cc1c78dc5..91b2c34ba2b73f58f97314940aa9e250c76e74dc 100644
--- a/types.d.ts
+++ b/types.d.ts
@@ -21,3 +21,6 @@ export interface Ss58Registry {
     specification: string;
     schema: Record<keyof KnownSubstrate, string>;
 }
+
+export type ShowNetworks = () => void;
+
